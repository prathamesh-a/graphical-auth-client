{"ast":null,"code":"var _jsxFileName = \"D:\\\\college\\\\Capstone\\\\graphical_pass_auth\\\\src\\\\components\\\\Items\\\\AttackBlock.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AttackBlock() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-4/5 rounded-lg bg-[#3B3B3B] p-6 mb-12 flex p-12\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"w-1/3\",\n        alt: \"\",\n        src: \"https://img.icons8.com/ios-filled/100/A259FF/re-enter-pincode.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 5,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-white text-3xl pt-4\",\n        children: \"Bruteforce\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 6,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-white ml-8 text-xl\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"After reaching max tries, the user will be notified via message through email. And the further authentication through the generic URL/website is disabled for that user account, instead, they have to use the link that will be sent by the company in the notification email. This also lets the legitimate user know about the adversary.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 9\n  }, this);\n}\n_c = AttackBlock;\nvar _c;\n$RefreshReg$(_c, \"AttackBlock\");","map":{"version":3,"names":["AttackBlock"],"sources":["D:/college/Capstone/graphical_pass_auth/src/components/Items/AttackBlock.js"],"sourcesContent":["export default function AttackBlock() {\r\n    return (\r\n        <div className=\"w-4/5 rounded-lg bg-[#3B3B3B] p-6 mb-12 flex p-12\">\r\n            <div>\r\n                <img className=\"w-1/3\" alt=\"\" src=\"https://img.icons8.com/ios-filled/100/A259FF/re-enter-pincode.png\"/>\r\n                <p className=\"text-white text-3xl pt-4\">Bruteforce</p>\r\n            </div>\r\n            <div className=\"text-white ml-8 text-xl\">\r\n                <p>After reaching max tries, the user will be notified via message through email. And the further authentication through the generic URL/website is disabled for that user account, instead, they have to use the link that will be sent by the company in the notification email. This also lets the legitimate user know about the adversary.</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}"],"mappings":";;AAAA,eAAe,SAASA,WAAW,GAAG;EAClC,oBACI;IAAK,SAAS,EAAC,mDAAmD;IAAA,wBAC9D;MAAA,wBACI;QAAK,SAAS,EAAC,OAAO;QAAC,GAAG,EAAC,EAAE;QAAC,GAAG,EAAC;MAAmE;QAAA;QAAA;QAAA;MAAA,QAAE,eACvG;QAAG,SAAS,EAAC,0BAA0B;QAAA,UAAC;MAAU;QAAA;QAAA;QAAA;MAAA,QAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QACpD,eACN;MAAK,SAAS,EAAC,yBAAyB;MAAA,uBACpC;QAAA,UAAG;MAA4U;QAAA;QAAA;QAAA;MAAA;IAAI;MAAA;MAAA;MAAA;IAAA,QACjV;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd;AAAC,KAZuBA,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}